<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.coder520.user.dao.AttendMapper" >
  <resultMap id="BaseResultMap" type="com.coder520.attend.entity.Attend" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="attend_date" property="attendDate" jdbcType="DATE" />
    <result column="attend_week" property="attendWeek" jdbcType="TINYINT" />
    <result column="attend_morning" property="attendMorning" jdbcType="TIME" />
    <result column="attend_evening" property="attendEvening" jdbcType="TIME" />
    <result column="absence" property="absence" jdbcType="INTEGER" />
    <result column="attend_status" property="attendStatus" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, attend_date, attend_week, attend_morning, attend_evening, absence, attend_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.coder520.attend.entity.AttendExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from attend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectTodaySignRecord" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select

    <include refid="Base_Column_List" />
    from attend
 <where>
    user_id=#{userId}
   AND
   attend_date=CURDATE()

 </where>
  </select>
  <select id="selectTotal" resultType="int">
    select
        count(0)
    from attend
    WHERE user_id=#{userId}
  </select>
  <select id="selectTodayAbsence" resultType="long">
select
    u.id from user u
     where u.id not IN
    (select
    a.user_id
    from    attend a
    WHERE   a.attend_date=CURDATE() )
  </select>
  <select id="selectAttendPage" resultMap="BaseResultMap" >
    select

    <include refid="Base_Column_List" />
    from attend
    <where> user_id=#{userId}
      <if test="startDate !=null and endDate !=null">
        AND
        attend_date between #{startDate} and #{endDate}

      </if>
      Limit #{startRow},#{pageSize}

    </where>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from attend
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from attend
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.coder520.attend.entity.AttendExample" >
    delete from attend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.coder520.attend.entity.Attend" >
    insert into attend (id, user_id, attend_date, 
      attend_week, attend_morning, attend_evening, 
      absence, attend_status)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{attendDate,jdbcType=DATE}, 
      #{attendWeek,jdbcType=TINYINT}, #{attendMorning,jdbcType=TIME}, #{attendEvening,jdbcType=TIME}, 
      #{absence,jdbcType=INTEGER}, #{attendStatus,jdbcType=TINYINT})
  </insert>
  <insert id="batchInsert" >
    insert into attend (user_id, attend_date,
    attend_week,
    absence, attend_status)
    values
    <foreach collection="list" item="item" separator=",">
    ( #{userId,jdbcType=BIGINT}, #{attendDate,jdbcType=DATE},
    #{attendWeek,jdbcType=TINYINT},
    #{absence,jdbcType=INTEGER}, #{attendStatus,jdbcType=TINYINT})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.coder520.attend.entity.Attend" >
    insert into attend
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="attendDate != null" >
        attend_date,
      </if>
      <if test="attendWeek != null" >
        attend_week,
      </if>
      <if test="attendMorning != null" >
        attend_morning,
      </if>
      <if test="attendEvening != null" >
        attend_evening,
      </if>
      <if test="absence != null" >
        absence,
      </if>
      <if test="attendStatus != null" >
        attend_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="attendDate != null" >
        #{attendDate,jdbcType=DATE},
      </if>
      <if test="attendWeek != null" >
        #{attendWeek,jdbcType=TINYINT},
      </if>
      <if test="attendMorning != null" >
        #{attendMorning,jdbcType=TIME},
      </if>
      <if test="attendEvening != null" >
        #{attendEvening,jdbcType=TIME},
      </if>
      <if test="absence != null" >
        #{absence,jdbcType=INTEGER},
      </if>
      <if test="attendStatus != null" >
        #{attendStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coder520.attend.entity.AttendExample" resultType="java.lang.Integer" >
    select count(*) from attend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectTodayEveryingAttend"  resultMap="BaseResultMap" >
   SELECT
   <include refid="Base_Column_List"/>
    FROM  attend
    WHERE   attend_evering is NULL and attend_status=1
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update attend
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.attendDate != null" >
        attend_date = #{record.attendDate,jdbcType=DATE},
      </if>
      <if test="record.attendWeek != null" >
        attend_week = #{record.attendWeek,jdbcType=TINYINT},
      </if>
      <if test="record.attendMorning != null" >
        attend_morning = #{record.attendMorning,jdbcType=TIME},
      </if>
      <if test="record.attendEvening != null" >
        attend_evening = #{record.attendEvening,jdbcType=TIME},
      </if>
      <if test="record.absence != null" >
        absence = #{record.absence,jdbcType=INTEGER},
      </if>
      <if test="record.attendStatus != null" >
        attend_status = #{record.attendStatus,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update attend
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      attend_date = #{record.attendDate,jdbcType=DATE},
      attend_week = #{record.attendWeek,jdbcType=TINYINT},
      attend_morning = #{record.attendMorning,jdbcType=TIME},
      attend_evening = #{record.attendEvening,jdbcType=TIME},
      absence = #{record.absence,jdbcType=INTEGER},
      attend_status = #{record.attendStatus,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coder520.attend.entity.Attend" >
    update attend
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="attendDate != null" >
        attend_date = #{attendDate,jdbcType=DATE},
      </if>
      <if test="attendWeek != null" >
        attend_week = #{attendWeek,jdbcType=TINYINT},
      </if>
      <if test="attendMorning != null" >
        attend_morning = #{attendMorning,jdbcType=TIME},
      </if>
      <if test="attendEvening != null" >
        attend_evening = #{attendEvening,jdbcType=TIME},
      </if>
      <if test="absence != null" >
        absence = #{absence,jdbcType=INTEGER},
      </if>
      <if test="attendStatus != null" >
        attend_status = #{attendStatus,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coder520.attend.entity.Attend" >
    update attend
    set user_id = #{userId,jdbcType=BIGINT},
      attend_date = #{attendDate,jdbcType=DATE},
      attend_week = #{attendWeek,jdbcType=TINYINT},
      attend_morning = #{attendMorning,jdbcType=TIME},
      attend_evening = #{attendEvening,jdbcType=TIME},
      absence = #{absence,jdbcType=INTEGER},
      attend_status = #{attendStatus,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>